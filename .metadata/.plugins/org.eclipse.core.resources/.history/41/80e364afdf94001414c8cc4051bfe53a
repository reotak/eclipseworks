package gui;

import intepret.InstanceField;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class InstanceViewer extends JFrame {
	private final DefaultTableModel fieldModel;
	private final JTable fieldTable;
	private final intepret.IInstance ins;
	private final InstanceTableViewer instanceTable;

	InstanceViewer(intepret.IInstance ins, InstanceTableViewer instanceTable) {
		this.ins = ins;
		this.instanceTable = instanceTable;

		this.setTitle(ins.getInstanceId());
		this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		this.setBounds(10, 10, 500, 800);

		// モデルを生成する
		String[] instanceColumnNames = { "フィールド名", "値" };
		fieldModel = new DefaultTableModel(instanceColumnNames, 0) {
			public boolean isCellEditable(int row, int column) {
				return false;
			}
		};

		// このテーブルに表示する内容を設定する
		refresh();

		// テーブルを表示するための設定
		JPanel fieldPanel = new JPanel();
		fieldTable = new JTable(fieldModel);
		JScrollPane sp = new JScrollPane(fieldTable);
		sp.setPreferredSize(new Dimension(450, 700));
		fieldTable.doLayout();
		fieldPanel.add(sp, BorderLayout.CENTER);

		JButton changeButton = new JButton("値の変更");
		changeButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				openChangeValueDialog();
			}
		});
		fieldPanel.add(changeButton);
		getContentPane().add(fieldPanel, BorderLayout.NORTH);

		JPanel buttonPannel = new JPanel();

		getContentPane().add(buttonPannel, BorderLayout.SOUTH);

		// 更新ボタン
		JButton renewButton = new JButton("最新の情報に更新");
		renewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				refresh();
			}
		});
		buttonPannel.add(renewButton, BorderLayout.CENTER);

	}

	public void refresh() {
		List<InstanceField> fields = this.ins.getFields();

		for (int i = 0; i < fieldModel.getRowCount(); i++) {
			fieldModel.removeRow(i);
		}

		for (int i = 0; i < fields.size(); i++) {
			fieldModel.addRow(new String[] { fields.get(i).getName(),
					fields.get(i).getValue() });
		}
	}

	private void openChangeValueDialog() {
		int row = fieldTable.getSelectedRow();
		if (row == -1) {
			JOptionPane.showMessageDialog(this, "行を選択してください");
			return;
		}
		String name = (String)fieldTable.getModel().getValueAt(row, 0);
		InstanceField f = ins.getField(name);

		ChangeValueWindow dialog = new ChangeValueWindow(ins, f, instanceTable, this);
		dialog.setVisible(true);
	}
}
