package gui;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

class SetArgumentsWindow extends JFrame {
	private final List<String> argTypes;
	private final Object[] args;
	private final CatchArguments catchArguments;
	private final JTable settingArgsTable;
	private final InstanceTableViewer instanceTableViewer;
	private final JTable instanceTable;
	private final JTextField primaryTextField;
	private final JComboBox<String> primaryComboBox;


	private int setArgCount = 0;


	public SetArgumentsWindow(List<String> argTypes, CatchArguments catchArguments, InstanceTableViewer instanceViewer) {
		// argsを生成
		this.args = new Object[argTypes.size()];

		this.setTitle("引数の設定");
		this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

		this.argTypes = argTypes;
		this.catchArguments = catchArguments;
		this.instanceTableViewer = instanceViewer;
		this.setBounds(10, 10, 500, 800);

		GridBagLayout layout =new GridBagLayout();
		GridBagConstraints c = new GridBagConstraints();
		c.insets = new Insets(5, 5, 5, 5);
		this.setLayout(layout);

		c.fill = 1;

		// 設定済みの引数を表示するテーブル
		JLabel settingArgsLabel = new JLabel("設定済みの引数");
		c.gridy = 0;
		c.anchor = GridBagConstraints.CENTER;
		layout.setConstraints(settingArgsLabel, c);
		this.add(settingArgsLabel);

		settingArgsTable = new JTable(new DefaultTableModel(new String[] {"型", "値"}, 0) {
			public boolean isCellEditable(int row, int column) {
				return false;
			}
		});

		for (String type : argTypes) {
			((DefaultTableModel)settingArgsTable.getModel()).addRow(
				new String[] { type, "未設定" });
		}
		JScrollPane sp1 = new JScrollPane(settingArgsTable);
		sp1.setPreferredSize(new Dimension(450, 200));
		settingArgsTable.doLayout();

		c.gridy = 1;
		c.anchor = GridBagConstraints.CENTER;
		layout.setConstraints(sp1, c);
		this.add(sp1);


		// InstanceTableを表示
		JLabel instanceTableLabel = new JLabel("既存のインスタンスに設定:");
		c.gridy = 2;
		c.anchor = GridBagConstraints.CENTER;
		layout.setConstraints(instanceTableLabel, c);
		this.add(instanceTableLabel);

		instanceTable = instanceViewer.getInstanceTable();
		JScrollPane sp2 = new JScrollPane(instanceTable);
		sp2.setPreferredSize(new Dimension(450, 450));
		instanceTable.doLayout();

		c.gridy = 3;
		c.anchor = GridBagConstraints.CENTER;
		layout.setConstraints(sp2, c);
		this.add(sp2);

		// InstanceTable の反映ボタン
		JButton selectedInstanceButton = new JButton("既存のオブジェクトを値に設定");
		selectedInstanceButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				addArgFromSelectedInstanceTable();
			}
		});

		c.gridy = 4;
		c.anchor = GridBagConstraints.CENTER;
		layout.setConstraints(selectedInstanceButton, c);
		this.add(selectedInstanceButton);


		// プライマリな値に設定するためのパネル
		JLabel primaryLable = new JLabel("プライマリな型から設定:");
		c.gridy = 5;
		c.anchor = GridBagConstraints.CENTER;
		layout.setConstraints(primaryLable, c);
		this.add(primaryLable);

		primaryComboBox = new JComboBox<String>(intepret.Util.getPrimaryTypes());
		c.gridy = 6;
		c.anchor = GridBagConstraints.CENTER;
		layout.setConstraints(primaryComboBox, c);
		this.add(primaryComboBox);

		JButton setButton = new JButton("この値に変更");
		setButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				addArgFromPrimaryValue();
			}
		});
		c.gridy = 7;
		c.anchor = GridBagConstraints.CENTER;
		layout.setConstraints(setButton, c);
		this.add(setButton);

		primaryTextField = new JTextField();
		primaryTextField.setColumns(15);
		c.gridy = 8;
		c.anchor = GridBagConstraints.CENTER;
		layout.setConstraints(primaryTextField, c);
		this.add(primaryTextField);
	}

	private void addArgFromSelectedInstanceTable() {
		int row = instanceTable.getSelectedRow();
		if (row == -1) {
			JOptionPane.showMessageDialog(this, "行を選択してください");
			return;
		}
		String key = (String)instanceTable.getModel().getValueAt(row, 0);
		addArg(instanceTableViewer.getInstance(key).getObject());
	}

	private void addArgFromPrimaryValue() {
		String selectedType = (String) primaryComboBox.getSelectedItem();
		String inputValue = primaryTextField.getText();
		if (inputValue == null) {
			inputValue = "";
		}
		addArg(intepret.Util.getPrimaryObject(selectedType, inputValue));
	}

	private void addArg(Object obj) {
		args[setArgCount] = obj;
		((DefaultTableModel)settingArgsTable.getModel()).setValueAt(obj, setArgCount, 1);

		setArgCount++;

		if (setArgCount >= argTypes.size()) {
			catchArguments.catchArguments(args);
			this.dispose();
		}
	}
}
