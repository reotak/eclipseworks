package intepret;

import java.lang.reflect.InvocationTargetException;
import java.util.Dictionary;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.List;

class InstanceTable {
	private int lastId = 0;
	private Dictionary<String, Instance> table = new Hashtable<String, Instance>();

	public void addNewInstance(Constructor con, List<Object> args) throws InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException {
		String id = nextId();
		table.put(id, new Instance(id, con, args));
		addId();
	}

	public Dictionary<String, Instance> getTable() {
		Dictionary<String, Instance> copy = new Hashtable<String, Instance>();

		for (Enumeration<String> e = copy.keys(); e.hasMoreElements();) {
		       String key = e.nextElement();
		       copy.put(key, table.get(key));
		}

		return copy;
	}

	private String nextId() {
		if (lastId >= 999) {
			throw new RuntimeException("これ以上オブジェクトを生成できません。");
		}
		return String.format("#%04d", lastId + 1);
	}

	private void addId() {
		if (lastId >= 999) {
			throw new RuntimeException("これ以上オブジェクトを生成できません。");
		}
		lastId++;
	}
}

