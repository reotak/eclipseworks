package ex16_03;

import java.lang.reflect.Member;

class ClassContents {
	public static void main(String[] args) {
		try {
			Class<?> c = Class.forName(args[0]);
			System.out.println(c);

			Class<?> sc = c.getSuperclass();
			printMembers(sc.getFields());
			printMembers(sc.getConstructors());
			printMembers(sc.getMethods());

		} catch (ClassNotFoundException e) {
			System.out.println("unknown class: " + args[0]);
		}
	}

	private static void printMembers(Member[] mems) {
		for (Member m : mems) {
			if (m.getDeclaringClass() == Object.class) {
				continue;
			}
			String decl = m.toString();
			System.out.print(" ");
			// System.out.println(strip(decl, "java.lang."));
			System.out.println(decl);
		}
	}

	private static String strip(String str, final String stripChars) {
		if (str == null || stripChars == null) {
			throw new IllegalArgumentException("str or stripChars is null");
		}
		
		if (str.substring(0, stripChars.length() - 1).equals(stripChars)) {
			return str.substring(stripChars.length());
		};
		
		return str;
	}
}
