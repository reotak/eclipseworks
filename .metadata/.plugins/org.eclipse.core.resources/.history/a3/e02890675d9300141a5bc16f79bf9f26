package intepret;

import java.lang.reflect.Constructor;
import java.util.ArrayList;
import java.util.List;

class ObjectCreater {
	private Class<?> cls;

	public ObjectCreater(String className) throws ClassNotFoundException,
			InstantiationException, IllegalAccessException {
		this.cls = Class.forName(className);
	}

	public List<intepret.Constructor> getConstructorList() {
		List<intepret.Constructor> cs = new ArrayList<intepret.Constructor>();
		for (Constructor<?> c : cls.getDeclaredConstructors()) {
			cs.add(new intepret.Constructor(c, c.getGenericParameterTypes()));
		}

		return cs;
	}

	public Instance createInstance(String instanceId, intepret.Constructor con, List<Object> args) {
		return new Instance(instanceId, con, args);

	}

	public static void main(String[] args) {
		ObjectCreater o = null;
		try {
			o = new ObjectCreater("java.awt.Frame");
		} catch (ClassNotFoundException | InstantiationException
				| IllegalAccessException e) {
			e.printStackTrace();
			System.exit(0);
		}
		for (intepret.Constructor c : o.getConstructorList()) {
			System.out.println(c);
		}
	}
}
