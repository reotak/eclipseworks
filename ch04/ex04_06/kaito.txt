a) N分木として扱えるという意味だけならばインターフェースでかまわないが、
   何番目の子を返すなどの処理は同一であり、同一の処理のを実装してしまうならば、抽象クラスとなる。
   またデータはObject型で構わないならば具象クラスとして実装する。
b) 木を探索するメソッドを提供するという意味ならばインターフェースだが、
   木を受け取ることで様々な探査方法で探索するメソッド群を提供するならば具象クラスとして実装する。
c) Drawableなオブジェクトは常に何ミリ秒ごとに再描写される状態と、指示があるまで表示されないという
   二状態を持つオブジェクトであるなどの制約を付ける場合、抽象クラスとして実装する。
   また、Drawableなオブジェクトの生成可能な個数に制限を付けたいなどといった場合にも抽象クラスとして実装する。
d) グラフィックデスクトップが要求するものによる。グラフィックデスクトップがsetup(), run(), finalize()と
   実行すると仮定し、run()のみをユーザに記述させたいならば、抽象クラスとして記述し、ユーザに提供する。
